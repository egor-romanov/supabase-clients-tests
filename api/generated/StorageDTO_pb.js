// source: StorageDTO.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Common_pb = require('./Common_pb.js');
goog.object.extend(proto, Common_pb);
goog.exportSymbol('proto.supabase.v1.AbortSignal', null, global);
goog.exportSymbol('proto.supabase.v1.Bucket', null, global);
goog.exportSymbol('proto.supabase.v1.CreateSignedUrlData', null, global);
goog.exportSymbol('proto.supabase.v1.CreateSignedUrlRequest', null, global);
goog.exportSymbol('proto.supabase.v1.CreateSignedUrlResponse', null, global);
goog.exportSymbol('proto.supabase.v1.CreateSignedUrlResponse.CreatesignedurldataOneOfCase', null, global);
goog.exportSymbol('proto.supabase.v1.DownloadRequest', null, global);
goog.exportSymbol('proto.supabase.v1.DownloadResponse', null, global);
goog.exportSymbol('proto.supabase.v1.DownloadResponse.DownloadOneOfCase', null, global);
goog.exportSymbol('proto.supabase.v1.FetchParameters', null, global);
goog.exportSymbol('proto.supabase.v1.File', null, global);
goog.exportSymbol('proto.supabase.v1.FileBody', null, global);
goog.exportSymbol('proto.supabase.v1.FileBody.FilebodyOneOfCase', null, global);
goog.exportSymbol('proto.supabase.v1.FileObject', null, global);
goog.exportSymbol('proto.supabase.v1.FileObjects', null, global);
goog.exportSymbol('proto.supabase.v1.FileOptions', null, global);
goog.exportSymbol('proto.supabase.v1.FormData', null, global);
goog.exportSymbol('proto.supabase.v1.GetPublicUrlData', null, global);
goog.exportSymbol('proto.supabase.v1.GetPublicUrlRequest', null, global);
goog.exportSymbol('proto.supabase.v1.GetPublicUrlResponse', null, global);
goog.exportSymbol('proto.supabase.v1.GetPublicUrlResponse.GetpublicurlOneOfCase', null, global);
goog.exportSymbol('proto.supabase.v1.ListRequest', null, global);
goog.exportSymbol('proto.supabase.v1.ListResponse', null, global);
goog.exportSymbol('proto.supabase.v1.ListResponse.ListOneOfCase', null, global);
goog.exportSymbol('proto.supabase.v1.MoveData', null, global);
goog.exportSymbol('proto.supabase.v1.MoveRequest', null, global);
goog.exportSymbol('proto.supabase.v1.MoveResponse', null, global);
goog.exportSymbol('proto.supabase.v1.MoveResponse.MovedataOneOfCase', null, global);
goog.exportSymbol('proto.supabase.v1.RemoveRequest', null, global);
goog.exportSymbol('proto.supabase.v1.RemoveResponse', null, global);
goog.exportSymbol('proto.supabase.v1.RemoveResponse.RemoveOneOfCase', null, global);
goog.exportSymbol('proto.supabase.v1.SearchOptions', null, global);
goog.exportSymbol('proto.supabase.v1.SortBy', null, global);
goog.exportSymbol('proto.supabase.v1.URLSearchParams', null, global);
goog.exportSymbol('proto.supabase.v1.UploadData', null, global);
goog.exportSymbol('proto.supabase.v1.UploadRequest', null, global);
goog.exportSymbol('proto.supabase.v1.UploadResponse', null, global);
goog.exportSymbol('proto.supabase.v1.UploadResponse.UploaddataOneOfCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.UploadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.supabase.v1.UploadResponse.oneofGroups_);
};
goog.inherits(proto.supabase.v1.UploadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.UploadResponse.displayName = 'proto.supabase.v1.UploadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.UploadData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.UploadData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.UploadData.displayName = 'proto.supabase.v1.UploadData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.UploadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.UploadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.UploadRequest.displayName = 'proto.supabase.v1.UploadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.FileBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.supabase.v1.FileBody.oneofGroups_);
};
goog.inherits(proto.supabase.v1.FileBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.FileBody.displayName = 'proto.supabase.v1.FileBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.File = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.File, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.File.displayName = 'proto.supabase.v1.File';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.FormData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.FormData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.FormData.displayName = 'proto.supabase.v1.FormData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.URLSearchParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.URLSearchParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.URLSearchParams.displayName = 'proto.supabase.v1.URLSearchParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.FileOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.FileOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.FileOptions.displayName = 'proto.supabase.v1.FileOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.MoveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.supabase.v1.MoveResponse.oneofGroups_);
};
goog.inherits(proto.supabase.v1.MoveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.MoveResponse.displayName = 'proto.supabase.v1.MoveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.MoveData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.MoveData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.MoveData.displayName = 'proto.supabase.v1.MoveData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.MoveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.MoveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.MoveRequest.displayName = 'proto.supabase.v1.MoveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.CreateSignedUrlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.supabase.v1.CreateSignedUrlResponse.oneofGroups_);
};
goog.inherits(proto.supabase.v1.CreateSignedUrlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.CreateSignedUrlResponse.displayName = 'proto.supabase.v1.CreateSignedUrlResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.CreateSignedUrlData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.CreateSignedUrlData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.CreateSignedUrlData.displayName = 'proto.supabase.v1.CreateSignedUrlData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.CreateSignedUrlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.CreateSignedUrlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.CreateSignedUrlRequest.displayName = 'proto.supabase.v1.CreateSignedUrlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.DownloadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.supabase.v1.DownloadResponse.oneofGroups_);
};
goog.inherits(proto.supabase.v1.DownloadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.DownloadResponse.displayName = 'proto.supabase.v1.DownloadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.DownloadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.DownloadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.DownloadRequest.displayName = 'proto.supabase.v1.DownloadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.GetPublicUrlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.supabase.v1.GetPublicUrlResponse.oneofGroups_);
};
goog.inherits(proto.supabase.v1.GetPublicUrlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.GetPublicUrlResponse.displayName = 'proto.supabase.v1.GetPublicUrlResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.GetPublicUrlData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.GetPublicUrlData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.GetPublicUrlData.displayName = 'proto.supabase.v1.GetPublicUrlData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.GetPublicUrlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.GetPublicUrlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.GetPublicUrlRequest.displayName = 'proto.supabase.v1.GetPublicUrlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.RemoveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.supabase.v1.RemoveResponse.oneofGroups_);
};
goog.inherits(proto.supabase.v1.RemoveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.RemoveResponse.displayName = 'proto.supabase.v1.RemoveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.FileObjects = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.supabase.v1.FileObjects.repeatedFields_, null);
};
goog.inherits(proto.supabase.v1.FileObjects, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.FileObjects.displayName = 'proto.supabase.v1.FileObjects';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.FileObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.FileObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.FileObject.displayName = 'proto.supabase.v1.FileObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.Bucket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.Bucket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.Bucket.displayName = 'proto.supabase.v1.Bucket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.RemoveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.supabase.v1.RemoveRequest.repeatedFields_, null);
};
goog.inherits(proto.supabase.v1.RemoveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.RemoveRequest.displayName = 'proto.supabase.v1.RemoveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.ListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.supabase.v1.ListResponse.oneofGroups_);
};
goog.inherits(proto.supabase.v1.ListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.ListResponse.displayName = 'proto.supabase.v1.ListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.ListRequest.displayName = 'proto.supabase.v1.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.SearchOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.SearchOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.SearchOptions.displayName = 'proto.supabase.v1.SearchOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.SortBy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.SortBy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.SortBy.displayName = 'proto.supabase.v1.SortBy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.FetchParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.FetchParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.FetchParameters.displayName = 'proto.supabase.v1.FetchParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.supabase.v1.AbortSignal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.supabase.v1.AbortSignal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.supabase.v1.AbortSignal.displayName = 'proto.supabase.v1.AbortSignal';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.supabase.v1.UploadResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.supabase.v1.UploadResponse.UploaddataOneOfCase = {
  UPLOADDATA_ONE_OF_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.supabase.v1.UploadResponse.UploaddataOneOfCase}
 */
proto.supabase.v1.UploadResponse.prototype.getUploaddataOneOfCase = function() {
  return /** @type {proto.supabase.v1.UploadResponse.UploaddataOneOfCase} */(jspb.Message.computeOneofCase(this, proto.supabase.v1.UploadResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.UploadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.UploadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.UploadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.UploadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.supabase.v1.UploadData.toObject(includeInstance, f),
    error: (f = msg.getError()) && Common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.UploadResponse}
 */
proto.supabase.v1.UploadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.UploadResponse;
  return proto.supabase.v1.UploadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.UploadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.UploadResponse}
 */
proto.supabase.v1.UploadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.supabase.v1.UploadData;
      reader.readMessage(value,proto.supabase.v1.UploadData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new Common_pb.Error;
      reader.readMessage(value,Common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.UploadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.UploadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.UploadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.UploadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.supabase.v1.UploadData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional UploadData data = 1;
 * @return {?proto.supabase.v1.UploadData}
 */
proto.supabase.v1.UploadResponse.prototype.getData = function() {
  return /** @type{?proto.supabase.v1.UploadData} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.UploadData, 1));
};


/**
 * @param {?proto.supabase.v1.UploadData|undefined} value
 * @return {!proto.supabase.v1.UploadResponse} returns this
*/
proto.supabase.v1.UploadResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.supabase.v1.UploadResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.UploadResponse} returns this
 */
proto.supabase.v1.UploadResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.UploadResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.supabase.v1.Error}
 */
proto.supabase.v1.UploadResponse.prototype.getError = function() {
  return /** @type{?proto.supabase.v1.Error} */ (
    jspb.Message.getWrapperField(this, Common_pb.Error, 2));
};


/**
 * @param {?proto.supabase.v1.Error|undefined} value
 * @return {!proto.supabase.v1.UploadResponse} returns this
*/
proto.supabase.v1.UploadResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.supabase.v1.UploadResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.UploadResponse} returns this
 */
proto.supabase.v1.UploadResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.UploadResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.UploadData.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.UploadData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.UploadData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.UploadData.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.UploadData}
 */
proto.supabase.v1.UploadData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.UploadData;
  return proto.supabase.v1.UploadData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.UploadData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.UploadData}
 */
proto.supabase.v1.UploadData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.UploadData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.UploadData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.UploadData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.UploadData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.supabase.v1.UploadData.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.UploadData} returns this
 */
proto.supabase.v1.UploadData.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.UploadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.UploadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.UploadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.UploadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filebody: (f = msg.getFilebody()) && proto.supabase.v1.FileBody.toObject(includeInstance, f),
    fileoptions: (f = msg.getFileoptions()) && proto.supabase.v1.FileOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.UploadRequest}
 */
proto.supabase.v1.UploadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.UploadRequest;
  return proto.supabase.v1.UploadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.UploadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.UploadRequest}
 */
proto.supabase.v1.UploadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = new proto.supabase.v1.FileBody;
      reader.readMessage(value,proto.supabase.v1.FileBody.deserializeBinaryFromReader);
      msg.setFilebody(value);
      break;
    case 4:
      var value = new proto.supabase.v1.FileOptions;
      reader.readMessage(value,proto.supabase.v1.FileOptions.deserializeBinaryFromReader);
      msg.setFileoptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.UploadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.UploadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.UploadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.UploadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilebody();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.supabase.v1.FileBody.serializeBinaryToWriter
    );
  }
  f = message.getFileoptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.supabase.v1.FileOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string bucketId = 1;
 * @return {string}
 */
proto.supabase.v1.UploadRequest.prototype.getBucketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.UploadRequest} returns this
 */
proto.supabase.v1.UploadRequest.prototype.setBucketid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.supabase.v1.UploadRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.UploadRequest} returns this
 */
proto.supabase.v1.UploadRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional FileBody fileBody = 3;
 * @return {?proto.supabase.v1.FileBody}
 */
proto.supabase.v1.UploadRequest.prototype.getFilebody = function() {
  return /** @type{?proto.supabase.v1.FileBody} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.FileBody, 3));
};


/**
 * @param {?proto.supabase.v1.FileBody|undefined} value
 * @return {!proto.supabase.v1.UploadRequest} returns this
*/
proto.supabase.v1.UploadRequest.prototype.setFilebody = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.UploadRequest} returns this
 */
proto.supabase.v1.UploadRequest.prototype.clearFilebody = function() {
  return this.setFilebody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.UploadRequest.prototype.hasFilebody = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FileOptions fileOptions = 4;
 * @return {?proto.supabase.v1.FileOptions}
 */
proto.supabase.v1.UploadRequest.prototype.getFileoptions = function() {
  return /** @type{?proto.supabase.v1.FileOptions} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.FileOptions, 4));
};


/**
 * @param {?proto.supabase.v1.FileOptions|undefined} value
 * @return {!proto.supabase.v1.UploadRequest} returns this
*/
proto.supabase.v1.UploadRequest.prototype.setFileoptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.UploadRequest} returns this
 */
proto.supabase.v1.UploadRequest.prototype.clearFileoptions = function() {
  return this.setFileoptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.UploadRequest.prototype.hasFileoptions = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.supabase.v1.FileBody.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.supabase.v1.FileBody.FilebodyOneOfCase = {
  FILEBODY_ONE_OF_NOT_SET: 0,
  BUFFER: 1,
  FILE: 2,
  FORMDATA: 3,
  URLSEARCHPARAMS: 4,
  STR: 5
};

/**
 * @return {proto.supabase.v1.FileBody.FilebodyOneOfCase}
 */
proto.supabase.v1.FileBody.prototype.getFilebodyOneOfCase = function() {
  return /** @type {proto.supabase.v1.FileBody.FilebodyOneOfCase} */(jspb.Message.computeOneofCase(this, proto.supabase.v1.FileBody.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.FileBody.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.FileBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.FileBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FileBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    buffer: msg.getBuffer_asB64(),
    file: (f = msg.getFile()) && proto.supabase.v1.File.toObject(includeInstance, f),
    formdata: (f = msg.getFormdata()) && proto.supabase.v1.FormData.toObject(includeInstance, f),
    urlsearchparams: (f = msg.getUrlsearchparams()) && proto.supabase.v1.URLSearchParams.toObject(includeInstance, f),
    str: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.FileBody}
 */
proto.supabase.v1.FileBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.FileBody;
  return proto.supabase.v1.FileBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.FileBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.FileBody}
 */
proto.supabase.v1.FileBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBuffer(value);
      break;
    case 2:
      var value = new proto.supabase.v1.File;
      reader.readMessage(value,proto.supabase.v1.File.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 3:
      var value = new proto.supabase.v1.FormData;
      reader.readMessage(value,proto.supabase.v1.FormData.deserializeBinaryFromReader);
      msg.setFormdata(value);
      break;
    case 4:
      var value = new proto.supabase.v1.URLSearchParams;
      reader.readMessage(value,proto.supabase.v1.URLSearchParams.deserializeBinaryFromReader);
      msg.setUrlsearchparams(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.FileBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.FileBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.FileBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FileBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.supabase.v1.File.serializeBinaryToWriter
    );
  }
  f = message.getFormdata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.supabase.v1.FormData.serializeBinaryToWriter
    );
  }
  f = message.getUrlsearchparams();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.supabase.v1.URLSearchParams.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bytes buffer = 1;
 * @return {!(string|Uint8Array)}
 */
proto.supabase.v1.FileBody.prototype.getBuffer = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes buffer = 1;
 * This is a type-conversion wrapper around `getBuffer()`
 * @return {string}
 */
proto.supabase.v1.FileBody.prototype.getBuffer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBuffer()));
};


/**
 * optional bytes buffer = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBuffer()`
 * @return {!Uint8Array}
 */
proto.supabase.v1.FileBody.prototype.getBuffer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBuffer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.supabase.v1.FileBody} returns this
 */
proto.supabase.v1.FileBody.prototype.setBuffer = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.supabase.v1.FileBody.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.supabase.v1.FileBody} returns this
 */
proto.supabase.v1.FileBody.prototype.clearBuffer = function() {
  return jspb.Message.setOneofField(this, 1, proto.supabase.v1.FileBody.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.FileBody.prototype.hasBuffer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional File file = 2;
 * @return {?proto.supabase.v1.File}
 */
proto.supabase.v1.FileBody.prototype.getFile = function() {
  return /** @type{?proto.supabase.v1.File} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.File, 2));
};


/**
 * @param {?proto.supabase.v1.File|undefined} value
 * @return {!proto.supabase.v1.FileBody} returns this
*/
proto.supabase.v1.FileBody.prototype.setFile = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.supabase.v1.FileBody.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.FileBody} returns this
 */
proto.supabase.v1.FileBody.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.FileBody.prototype.hasFile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FormData formData = 3;
 * @return {?proto.supabase.v1.FormData}
 */
proto.supabase.v1.FileBody.prototype.getFormdata = function() {
  return /** @type{?proto.supabase.v1.FormData} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.FormData, 3));
};


/**
 * @param {?proto.supabase.v1.FormData|undefined} value
 * @return {!proto.supabase.v1.FileBody} returns this
*/
proto.supabase.v1.FileBody.prototype.setFormdata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.supabase.v1.FileBody.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.FileBody} returns this
 */
proto.supabase.v1.FileBody.prototype.clearFormdata = function() {
  return this.setFormdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.FileBody.prototype.hasFormdata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional URLSearchParams urlSearchParams = 4;
 * @return {?proto.supabase.v1.URLSearchParams}
 */
proto.supabase.v1.FileBody.prototype.getUrlsearchparams = function() {
  return /** @type{?proto.supabase.v1.URLSearchParams} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.URLSearchParams, 4));
};


/**
 * @param {?proto.supabase.v1.URLSearchParams|undefined} value
 * @return {!proto.supabase.v1.FileBody} returns this
*/
proto.supabase.v1.FileBody.prototype.setUrlsearchparams = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.supabase.v1.FileBody.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.FileBody} returns this
 */
proto.supabase.v1.FileBody.prototype.clearUrlsearchparams = function() {
  return this.setUrlsearchparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.FileBody.prototype.hasUrlsearchparams = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string str = 5;
 * @return {string}
 */
proto.supabase.v1.FileBody.prototype.getStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileBody} returns this
 */
proto.supabase.v1.FileBody.prototype.setStr = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.supabase.v1.FileBody.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.supabase.v1.FileBody} returns this
 */
proto.supabase.v1.FileBody.prototype.clearStr = function() {
  return jspb.Message.setOneofField(this, 5, proto.supabase.v1.FileBody.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.FileBody.prototype.hasStr = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.File.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.File.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.File} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.File.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastmodified: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    webkitrelativepath: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.File}
 */
proto.supabase.v1.File.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.File;
  return proto.supabase.v1.File.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.File} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.File}
 */
proto.supabase.v1.File.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastmodified(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebkitrelativepath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.File.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.File.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.File} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.File.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastmodified();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWebkitrelativepath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 lastModified = 1;
 * @return {number}
 */
proto.supabase.v1.File.prototype.getLastmodified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.supabase.v1.File} returns this
 */
proto.supabase.v1.File.prototype.setLastmodified = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.supabase.v1.File.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.File} returns this
 */
proto.supabase.v1.File.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string webkitRelativePath = 3;
 * @return {string}
 */
proto.supabase.v1.File.prototype.getWebkitrelativepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.File} returns this
 */
proto.supabase.v1.File.prototype.setWebkitrelativepath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.FormData.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.FormData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.FormData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FormData.toObject = function(includeInstance, msg) {
  var f, obj = {
    pricesMap: (f = msg.getPricesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.FormData}
 */
proto.supabase.v1.FormData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.FormData;
  return proto.supabase.v1.FormData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.FormData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.FormData}
 */
proto.supabase.v1.FormData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getPricesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.FormData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.FormData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.FormData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FormData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPricesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> prices = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.supabase.v1.FormData.prototype.getPricesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.supabase.v1.FormData} returns this
 */
proto.supabase.v1.FormData.prototype.clearPricesMap = function() {
  this.getPricesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.URLSearchParams.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.URLSearchParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.URLSearchParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.URLSearchParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.URLSearchParams}
 */
proto.supabase.v1.URLSearchParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.URLSearchParams;
  return proto.supabase.v1.URLSearchParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.URLSearchParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.URLSearchParams}
 */
proto.supabase.v1.URLSearchParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.URLSearchParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.URLSearchParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.URLSearchParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.URLSearchParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string params = 1;
 * @return {string}
 */
proto.supabase.v1.URLSearchParams.prototype.getParams = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.URLSearchParams} returns this
 */
proto.supabase.v1.URLSearchParams.prototype.setParams = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.FileOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.FileOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.FileOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FileOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    cachecontrol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contenttype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    upsert: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.FileOptions}
 */
proto.supabase.v1.FileOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.FileOptions;
  return proto.supabase.v1.FileOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.FileOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.FileOptions}
 */
proto.supabase.v1.FileOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCachecontrol(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContenttype(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpsert(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.FileOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.FileOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.FileOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FileOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCachecontrol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContenttype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUpsert();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string cacheControl = 1;
 * @return {string}
 */
proto.supabase.v1.FileOptions.prototype.getCachecontrol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileOptions} returns this
 */
proto.supabase.v1.FileOptions.prototype.setCachecontrol = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contentType = 2;
 * @return {string}
 */
proto.supabase.v1.FileOptions.prototype.getContenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileOptions} returns this
 */
proto.supabase.v1.FileOptions.prototype.setContenttype = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool upsert = 3;
 * @return {boolean}
 */
proto.supabase.v1.FileOptions.prototype.getUpsert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.supabase.v1.FileOptions} returns this
 */
proto.supabase.v1.FileOptions.prototype.setUpsert = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.supabase.v1.MoveResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.supabase.v1.MoveResponse.MovedataOneOfCase = {
  MOVEDATA_ONE_OF_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.supabase.v1.MoveResponse.MovedataOneOfCase}
 */
proto.supabase.v1.MoveResponse.prototype.getMovedataOneOfCase = function() {
  return /** @type {proto.supabase.v1.MoveResponse.MovedataOneOfCase} */(jspb.Message.computeOneofCase(this, proto.supabase.v1.MoveResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.MoveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.MoveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.MoveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.MoveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.supabase.v1.MoveData.toObject(includeInstance, f),
    error: (f = msg.getError()) && Common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.MoveResponse}
 */
proto.supabase.v1.MoveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.MoveResponse;
  return proto.supabase.v1.MoveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.MoveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.MoveResponse}
 */
proto.supabase.v1.MoveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.supabase.v1.MoveData;
      reader.readMessage(value,proto.supabase.v1.MoveData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new Common_pb.Error;
      reader.readMessage(value,Common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.MoveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.MoveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.MoveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.MoveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.supabase.v1.MoveData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional MoveData data = 1;
 * @return {?proto.supabase.v1.MoveData}
 */
proto.supabase.v1.MoveResponse.prototype.getData = function() {
  return /** @type{?proto.supabase.v1.MoveData} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.MoveData, 1));
};


/**
 * @param {?proto.supabase.v1.MoveData|undefined} value
 * @return {!proto.supabase.v1.MoveResponse} returns this
*/
proto.supabase.v1.MoveResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.supabase.v1.MoveResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.MoveResponse} returns this
 */
proto.supabase.v1.MoveResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.MoveResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.supabase.v1.Error}
 */
proto.supabase.v1.MoveResponse.prototype.getError = function() {
  return /** @type{?proto.supabase.v1.Error} */ (
    jspb.Message.getWrapperField(this, Common_pb.Error, 2));
};


/**
 * @param {?proto.supabase.v1.Error|undefined} value
 * @return {!proto.supabase.v1.MoveResponse} returns this
*/
proto.supabase.v1.MoveResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.supabase.v1.MoveResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.MoveResponse} returns this
 */
proto.supabase.v1.MoveResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.MoveResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.MoveData.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.MoveData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.MoveData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.MoveData.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.MoveData}
 */
proto.supabase.v1.MoveData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.MoveData;
  return proto.supabase.v1.MoveData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.MoveData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.MoveData}
 */
proto.supabase.v1.MoveData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.MoveData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.MoveData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.MoveData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.MoveData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.supabase.v1.MoveData.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.MoveData} returns this
 */
proto.supabase.v1.MoveData.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.MoveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.MoveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.MoveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.MoveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    frompath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    topath: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.MoveRequest}
 */
proto.supabase.v1.MoveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.MoveRequest;
  return proto.supabase.v1.MoveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.MoveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.MoveRequest}
 */
proto.supabase.v1.MoveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrompath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.MoveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.MoveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.MoveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.MoveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrompath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTopath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string bucketId = 1;
 * @return {string}
 */
proto.supabase.v1.MoveRequest.prototype.getBucketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.MoveRequest} returns this
 */
proto.supabase.v1.MoveRequest.prototype.setBucketid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fromPath = 2;
 * @return {string}
 */
proto.supabase.v1.MoveRequest.prototype.getFrompath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.MoveRequest} returns this
 */
proto.supabase.v1.MoveRequest.prototype.setFrompath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string toPath = 3;
 * @return {string}
 */
proto.supabase.v1.MoveRequest.prototype.getTopath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.MoveRequest} returns this
 */
proto.supabase.v1.MoveRequest.prototype.setTopath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.supabase.v1.CreateSignedUrlResponse.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.supabase.v1.CreateSignedUrlResponse.CreatesignedurldataOneOfCase = {
  CREATESIGNEDURLDATA_ONE_OF_NOT_SET: 0,
  DATA: 1,
  ERROR: 2,
  SIGNEDURL: 3
};

/**
 * @return {proto.supabase.v1.CreateSignedUrlResponse.CreatesignedurldataOneOfCase}
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.getCreatesignedurldataOneOfCase = function() {
  return /** @type {proto.supabase.v1.CreateSignedUrlResponse.CreatesignedurldataOneOfCase} */(jspb.Message.computeOneofCase(this, proto.supabase.v1.CreateSignedUrlResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.CreateSignedUrlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.CreateSignedUrlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.CreateSignedUrlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.supabase.v1.CreateSignedUrlData.toObject(includeInstance, f),
    error: (f = msg.getError()) && Common_pb.Error.toObject(includeInstance, f),
    signedurl: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.CreateSignedUrlResponse}
 */
proto.supabase.v1.CreateSignedUrlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.CreateSignedUrlResponse;
  return proto.supabase.v1.CreateSignedUrlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.CreateSignedUrlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.CreateSignedUrlResponse}
 */
proto.supabase.v1.CreateSignedUrlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.supabase.v1.CreateSignedUrlData;
      reader.readMessage(value,proto.supabase.v1.CreateSignedUrlData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new Common_pb.Error;
      reader.readMessage(value,Common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignedurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.CreateSignedUrlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.CreateSignedUrlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.CreateSignedUrlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.supabase.v1.CreateSignedUrlData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Common_pb.Error.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional CreateSignedUrlData data = 1;
 * @return {?proto.supabase.v1.CreateSignedUrlData}
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.getData = function() {
  return /** @type{?proto.supabase.v1.CreateSignedUrlData} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.CreateSignedUrlData, 1));
};


/**
 * @param {?proto.supabase.v1.CreateSignedUrlData|undefined} value
 * @return {!proto.supabase.v1.CreateSignedUrlResponse} returns this
*/
proto.supabase.v1.CreateSignedUrlResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.supabase.v1.CreateSignedUrlResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.CreateSignedUrlResponse} returns this
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.supabase.v1.Error}
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.getError = function() {
  return /** @type{?proto.supabase.v1.Error} */ (
    jspb.Message.getWrapperField(this, Common_pb.Error, 2));
};


/**
 * @param {?proto.supabase.v1.Error|undefined} value
 * @return {!proto.supabase.v1.CreateSignedUrlResponse} returns this
*/
proto.supabase.v1.CreateSignedUrlResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.supabase.v1.CreateSignedUrlResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.CreateSignedUrlResponse} returns this
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string signedURL = 3;
 * @return {string}
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.getSignedurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.CreateSignedUrlResponse} returns this
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.setSignedurl = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.supabase.v1.CreateSignedUrlResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.supabase.v1.CreateSignedUrlResponse} returns this
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.clearSignedurl = function() {
  return jspb.Message.setOneofField(this, 3, proto.supabase.v1.CreateSignedUrlResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.CreateSignedUrlResponse.prototype.hasSignedurl = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.CreateSignedUrlData.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.CreateSignedUrlData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.CreateSignedUrlData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.CreateSignedUrlData.toObject = function(includeInstance, msg) {
  var f, obj = {
    signedurl: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.CreateSignedUrlData}
 */
proto.supabase.v1.CreateSignedUrlData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.CreateSignedUrlData;
  return proto.supabase.v1.CreateSignedUrlData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.CreateSignedUrlData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.CreateSignedUrlData}
 */
proto.supabase.v1.CreateSignedUrlData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignedurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.CreateSignedUrlData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.CreateSignedUrlData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.CreateSignedUrlData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.CreateSignedUrlData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignedurl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string signedURL = 1;
 * @return {string}
 */
proto.supabase.v1.CreateSignedUrlData.prototype.getSignedurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.CreateSignedUrlData} returns this
 */
proto.supabase.v1.CreateSignedUrlData.prototype.setSignedurl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.CreateSignedUrlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.CreateSignedUrlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.CreateSignedUrlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.CreateSignedUrlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expiresin: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.CreateSignedUrlRequest}
 */
proto.supabase.v1.CreateSignedUrlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.CreateSignedUrlRequest;
  return proto.supabase.v1.CreateSignedUrlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.CreateSignedUrlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.CreateSignedUrlRequest}
 */
proto.supabase.v1.CreateSignedUrlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpiresin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.CreateSignedUrlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.CreateSignedUrlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.CreateSignedUrlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.CreateSignedUrlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpiresin();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string bucketId = 1;
 * @return {string}
 */
proto.supabase.v1.CreateSignedUrlRequest.prototype.getBucketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.CreateSignedUrlRequest} returns this
 */
proto.supabase.v1.CreateSignedUrlRequest.prototype.setBucketid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.supabase.v1.CreateSignedUrlRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.CreateSignedUrlRequest} returns this
 */
proto.supabase.v1.CreateSignedUrlRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 expiresIn = 3;
 * @return {number}
 */
proto.supabase.v1.CreateSignedUrlRequest.prototype.getExpiresin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.supabase.v1.CreateSignedUrlRequest} returns this
 */
proto.supabase.v1.CreateSignedUrlRequest.prototype.setExpiresin = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.supabase.v1.DownloadResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.supabase.v1.DownloadResponse.DownloadOneOfCase = {
  DOWNLOAD_ONE_OF_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.supabase.v1.DownloadResponse.DownloadOneOfCase}
 */
proto.supabase.v1.DownloadResponse.prototype.getDownloadOneOfCase = function() {
  return /** @type {proto.supabase.v1.DownloadResponse.DownloadOneOfCase} */(jspb.Message.computeOneofCase(this, proto.supabase.v1.DownloadResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.DownloadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.DownloadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.DownloadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.DownloadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    error: (f = msg.getError()) && Common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.DownloadResponse}
 */
proto.supabase.v1.DownloadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.DownloadResponse;
  return proto.supabase.v1.DownloadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.DownloadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.DownloadResponse}
 */
proto.supabase.v1.DownloadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = new Common_pb.Error;
      reader.readMessage(value,Common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.DownloadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.DownloadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.DownloadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.DownloadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.supabase.v1.DownloadResponse.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.supabase.v1.DownloadResponse.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.supabase.v1.DownloadResponse.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.supabase.v1.DownloadResponse} returns this
 */
proto.supabase.v1.DownloadResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.supabase.v1.DownloadResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.supabase.v1.DownloadResponse} returns this
 */
proto.supabase.v1.DownloadResponse.prototype.clearData = function() {
  return jspb.Message.setOneofField(this, 1, proto.supabase.v1.DownloadResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.DownloadResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.supabase.v1.Error}
 */
proto.supabase.v1.DownloadResponse.prototype.getError = function() {
  return /** @type{?proto.supabase.v1.Error} */ (
    jspb.Message.getWrapperField(this, Common_pb.Error, 2));
};


/**
 * @param {?proto.supabase.v1.Error|undefined} value
 * @return {!proto.supabase.v1.DownloadResponse} returns this
*/
proto.supabase.v1.DownloadResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.supabase.v1.DownloadResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.DownloadResponse} returns this
 */
proto.supabase.v1.DownloadResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.DownloadResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.DownloadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.DownloadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.DownloadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.DownloadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.DownloadRequest}
 */
proto.supabase.v1.DownloadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.DownloadRequest;
  return proto.supabase.v1.DownloadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.DownloadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.DownloadRequest}
 */
proto.supabase.v1.DownloadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.DownloadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.DownloadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.DownloadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.DownloadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.supabase.v1.DownloadRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.DownloadRequest} returns this
 */
proto.supabase.v1.DownloadRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.supabase.v1.GetPublicUrlResponse.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.supabase.v1.GetPublicUrlResponse.GetpublicurlOneOfCase = {
  GETPUBLICURL_ONE_OF_NOT_SET: 0,
  DATA: 1,
  ERROR: 2,
  PUBLICURL: 3
};

/**
 * @return {proto.supabase.v1.GetPublicUrlResponse.GetpublicurlOneOfCase}
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.getGetpublicurlOneOfCase = function() {
  return /** @type {proto.supabase.v1.GetPublicUrlResponse.GetpublicurlOneOfCase} */(jspb.Message.computeOneofCase(this, proto.supabase.v1.GetPublicUrlResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.GetPublicUrlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.GetPublicUrlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.GetPublicUrlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.supabase.v1.GetPublicUrlData.toObject(includeInstance, f),
    error: (f = msg.getError()) && Common_pb.Error.toObject(includeInstance, f),
    publicurl: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.GetPublicUrlResponse}
 */
proto.supabase.v1.GetPublicUrlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.GetPublicUrlResponse;
  return proto.supabase.v1.GetPublicUrlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.GetPublicUrlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.GetPublicUrlResponse}
 */
proto.supabase.v1.GetPublicUrlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.supabase.v1.GetPublicUrlData;
      reader.readMessage(value,proto.supabase.v1.GetPublicUrlData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new Common_pb.Error;
      reader.readMessage(value,Common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.GetPublicUrlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.GetPublicUrlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.GetPublicUrlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.supabase.v1.GetPublicUrlData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Common_pb.Error.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional GetPublicUrlData data = 1;
 * @return {?proto.supabase.v1.GetPublicUrlData}
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.getData = function() {
  return /** @type{?proto.supabase.v1.GetPublicUrlData} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.GetPublicUrlData, 1));
};


/**
 * @param {?proto.supabase.v1.GetPublicUrlData|undefined} value
 * @return {!proto.supabase.v1.GetPublicUrlResponse} returns this
*/
proto.supabase.v1.GetPublicUrlResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.supabase.v1.GetPublicUrlResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.GetPublicUrlResponse} returns this
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.supabase.v1.Error}
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.getError = function() {
  return /** @type{?proto.supabase.v1.Error} */ (
    jspb.Message.getWrapperField(this, Common_pb.Error, 2));
};


/**
 * @param {?proto.supabase.v1.Error|undefined} value
 * @return {!proto.supabase.v1.GetPublicUrlResponse} returns this
*/
proto.supabase.v1.GetPublicUrlResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.supabase.v1.GetPublicUrlResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.GetPublicUrlResponse} returns this
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string publicURL = 3;
 * @return {string}
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.getPublicurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.GetPublicUrlResponse} returns this
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.setPublicurl = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.supabase.v1.GetPublicUrlResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.supabase.v1.GetPublicUrlResponse} returns this
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.clearPublicurl = function() {
  return jspb.Message.setOneofField(this, 3, proto.supabase.v1.GetPublicUrlResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.GetPublicUrlResponse.prototype.hasPublicurl = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.GetPublicUrlData.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.GetPublicUrlData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.GetPublicUrlData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.GetPublicUrlData.toObject = function(includeInstance, msg) {
  var f, obj = {
    publicurl: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.GetPublicUrlData}
 */
proto.supabase.v1.GetPublicUrlData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.GetPublicUrlData;
  return proto.supabase.v1.GetPublicUrlData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.GetPublicUrlData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.GetPublicUrlData}
 */
proto.supabase.v1.GetPublicUrlData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.GetPublicUrlData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.GetPublicUrlData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.GetPublicUrlData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.GetPublicUrlData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublicurl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string publicURL = 1;
 * @return {string}
 */
proto.supabase.v1.GetPublicUrlData.prototype.getPublicurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.GetPublicUrlData} returns this
 */
proto.supabase.v1.GetPublicUrlData.prototype.setPublicurl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.GetPublicUrlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.GetPublicUrlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.GetPublicUrlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.GetPublicUrlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.GetPublicUrlRequest}
 */
proto.supabase.v1.GetPublicUrlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.GetPublicUrlRequest;
  return proto.supabase.v1.GetPublicUrlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.GetPublicUrlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.GetPublicUrlRequest}
 */
proto.supabase.v1.GetPublicUrlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.GetPublicUrlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.GetPublicUrlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.GetPublicUrlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.GetPublicUrlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string bucketId = 1;
 * @return {string}
 */
proto.supabase.v1.GetPublicUrlRequest.prototype.getBucketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.GetPublicUrlRequest} returns this
 */
proto.supabase.v1.GetPublicUrlRequest.prototype.setBucketid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.supabase.v1.GetPublicUrlRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.GetPublicUrlRequest} returns this
 */
proto.supabase.v1.GetPublicUrlRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.supabase.v1.RemoveResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.supabase.v1.RemoveResponse.RemoveOneOfCase = {
  REMOVE_ONE_OF_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.supabase.v1.RemoveResponse.RemoveOneOfCase}
 */
proto.supabase.v1.RemoveResponse.prototype.getRemoveOneOfCase = function() {
  return /** @type {proto.supabase.v1.RemoveResponse.RemoveOneOfCase} */(jspb.Message.computeOneofCase(this, proto.supabase.v1.RemoveResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.RemoveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.RemoveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.RemoveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.RemoveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.supabase.v1.FileObjects.toObject(includeInstance, f),
    error: (f = msg.getError()) && Common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.RemoveResponse}
 */
proto.supabase.v1.RemoveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.RemoveResponse;
  return proto.supabase.v1.RemoveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.RemoveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.RemoveResponse}
 */
proto.supabase.v1.RemoveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.supabase.v1.FileObjects;
      reader.readMessage(value,proto.supabase.v1.FileObjects.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new Common_pb.Error;
      reader.readMessage(value,Common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.RemoveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.RemoveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.RemoveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.RemoveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.supabase.v1.FileObjects.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional FileObjects data = 1;
 * @return {?proto.supabase.v1.FileObjects}
 */
proto.supabase.v1.RemoveResponse.prototype.getData = function() {
  return /** @type{?proto.supabase.v1.FileObjects} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.FileObjects, 1));
};


/**
 * @param {?proto.supabase.v1.FileObjects|undefined} value
 * @return {!proto.supabase.v1.RemoveResponse} returns this
*/
proto.supabase.v1.RemoveResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.supabase.v1.RemoveResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.RemoveResponse} returns this
 */
proto.supabase.v1.RemoveResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.RemoveResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.supabase.v1.Error}
 */
proto.supabase.v1.RemoveResponse.prototype.getError = function() {
  return /** @type{?proto.supabase.v1.Error} */ (
    jspb.Message.getWrapperField(this, Common_pb.Error, 2));
};


/**
 * @param {?proto.supabase.v1.Error|undefined} value
 * @return {!proto.supabase.v1.RemoveResponse} returns this
*/
proto.supabase.v1.RemoveResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.supabase.v1.RemoveResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.RemoveResponse} returns this
 */
proto.supabase.v1.RemoveResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.RemoveResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.supabase.v1.FileObjects.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.FileObjects.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.FileObjects.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.FileObjects} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FileObjects.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileobjectsList: jspb.Message.toObjectList(msg.getFileobjectsList(),
    proto.supabase.v1.FileObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.FileObjects}
 */
proto.supabase.v1.FileObjects.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.FileObjects;
  return proto.supabase.v1.FileObjects.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.FileObjects} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.FileObjects}
 */
proto.supabase.v1.FileObjects.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.supabase.v1.FileObject;
      reader.readMessage(value,proto.supabase.v1.FileObject.deserializeBinaryFromReader);
      msg.addFileobjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.FileObjects.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.FileObjects.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.FileObjects} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FileObjects.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileobjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.supabase.v1.FileObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FileObject fileObjects = 1;
 * @return {!Array<!proto.supabase.v1.FileObject>}
 */
proto.supabase.v1.FileObjects.prototype.getFileobjectsList = function() {
  return /** @type{!Array<!proto.supabase.v1.FileObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.supabase.v1.FileObject, 1));
};


/**
 * @param {!Array<!proto.supabase.v1.FileObject>} value
 * @return {!proto.supabase.v1.FileObjects} returns this
*/
proto.supabase.v1.FileObjects.prototype.setFileobjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.supabase.v1.FileObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.supabase.v1.FileObject}
 */
proto.supabase.v1.FileObjects.prototype.addFileobjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.supabase.v1.FileObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.supabase.v1.FileObjects} returns this
 */
proto.supabase.v1.FileObjects.prototype.clearFileobjectsList = function() {
  return this.setFileobjectsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.FileObject.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.FileObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.FileObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FileObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bucketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    id: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastAccessedAt: jspb.Message.getFieldWithDefault(msg, 7, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    buckets: (f = msg.getBuckets()) && proto.supabase.v1.Bucket.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.FileObject}
 */
proto.supabase.v1.FileObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.FileObject;
  return proto.supabase.v1.FileObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.FileObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.FileObject}
 */
proto.supabase.v1.FileObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastAccessedAt(value);
      break;
    case 8:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = new proto.supabase.v1.Bucket;
      reader.readMessage(value,proto.supabase.v1.Bucket.deserializeBinaryFromReader);
      msg.setBuckets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.FileObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.FileObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.FileObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FileObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBucketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastAccessedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getBuckets();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.supabase.v1.Bucket.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.supabase.v1.FileObject.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileObject} returns this
 */
proto.supabase.v1.FileObject.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bucket_id = 2;
 * @return {string}
 */
proto.supabase.v1.FileObject.prototype.getBucketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileObject} returns this
 */
proto.supabase.v1.FileObject.prototype.setBucketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.supabase.v1.FileObject.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileObject} returns this
 */
proto.supabase.v1.FileObject.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string id = 4;
 * @return {string}
 */
proto.supabase.v1.FileObject.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileObject} returns this
 */
proto.supabase.v1.FileObject.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_at = 5;
 * @return {string}
 */
proto.supabase.v1.FileObject.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileObject} returns this
 */
proto.supabase.v1.FileObject.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.supabase.v1.FileObject.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileObject} returns this
 */
proto.supabase.v1.FileObject.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string last_accessed_at = 7;
 * @return {string}
 */
proto.supabase.v1.FileObject.prototype.getLastAccessedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.FileObject} returns this
 */
proto.supabase.v1.FileObject.prototype.setLastAccessedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * map<string, string> metadata = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.supabase.v1.FileObject.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.supabase.v1.FileObject} returns this
 */
proto.supabase.v1.FileObject.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional Bucket buckets = 9;
 * @return {?proto.supabase.v1.Bucket}
 */
proto.supabase.v1.FileObject.prototype.getBuckets = function() {
  return /** @type{?proto.supabase.v1.Bucket} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.Bucket, 9));
};


/**
 * @param {?proto.supabase.v1.Bucket|undefined} value
 * @return {!proto.supabase.v1.FileObject} returns this
*/
proto.supabase.v1.FileObject.prototype.setBuckets = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.FileObject} returns this
 */
proto.supabase.v1.FileObject.prototype.clearBuckets = function() {
  return this.setBuckets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.FileObject.prototype.hasBuckets = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.Bucket.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.Bucket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.Bucket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.Bucket.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pb_public: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.Bucket}
 */
proto.supabase.v1.Bucket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.Bucket;
  return proto.supabase.v1.Bucket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.Bucket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.Bucket}
 */
proto.supabase.v1.Bucket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.Bucket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.Bucket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.Bucket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.Bucket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPublic();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.supabase.v1.Bucket.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.Bucket} returns this
 */
proto.supabase.v1.Bucket.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.supabase.v1.Bucket.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.Bucket} returns this
 */
proto.supabase.v1.Bucket.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.supabase.v1.Bucket.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.Bucket} returns this
 */
proto.supabase.v1.Bucket.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string created_at = 4;
 * @return {string}
 */
proto.supabase.v1.Bucket.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.Bucket} returns this
 */
proto.supabase.v1.Bucket.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_at = 5;
 * @return {string}
 */
proto.supabase.v1.Bucket.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.Bucket} returns this
 */
proto.supabase.v1.Bucket.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool public = 6;
 * @return {boolean}
 */
proto.supabase.v1.Bucket.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.supabase.v1.Bucket} returns this
 */
proto.supabase.v1.Bucket.prototype.setPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.supabase.v1.RemoveRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.RemoveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.RemoveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.RemoveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.RemoveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pathsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.RemoveRequest}
 */
proto.supabase.v1.RemoveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.RemoveRequest;
  return proto.supabase.v1.RemoveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.RemoveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.RemoveRequest}
 */
proto.supabase.v1.RemoveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.RemoveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.RemoveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.RemoveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.RemoveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string bucketId = 1;
 * @return {string}
 */
proto.supabase.v1.RemoveRequest.prototype.getBucketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.RemoveRequest} returns this
 */
proto.supabase.v1.RemoveRequest.prototype.setBucketid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string paths = 2;
 * @return {!Array<string>}
 */
proto.supabase.v1.RemoveRequest.prototype.getPathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.supabase.v1.RemoveRequest} returns this
 */
proto.supabase.v1.RemoveRequest.prototype.setPathsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.supabase.v1.RemoveRequest} returns this
 */
proto.supabase.v1.RemoveRequest.prototype.addPaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.supabase.v1.RemoveRequest} returns this
 */
proto.supabase.v1.RemoveRequest.prototype.clearPathsList = function() {
  return this.setPathsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.supabase.v1.ListResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.supabase.v1.ListResponse.ListOneOfCase = {
  LIST_ONE_OF_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.supabase.v1.ListResponse.ListOneOfCase}
 */
proto.supabase.v1.ListResponse.prototype.getListOneOfCase = function() {
  return /** @type {proto.supabase.v1.ListResponse.ListOneOfCase} */(jspb.Message.computeOneofCase(this, proto.supabase.v1.ListResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.ListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.ListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.ListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.ListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.supabase.v1.FileObjects.toObject(includeInstance, f),
    error: (f = msg.getError()) && Common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.ListResponse}
 */
proto.supabase.v1.ListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.ListResponse;
  return proto.supabase.v1.ListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.ListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.ListResponse}
 */
proto.supabase.v1.ListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.supabase.v1.FileObjects;
      reader.readMessage(value,proto.supabase.v1.FileObjects.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new Common_pb.Error;
      reader.readMessage(value,Common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.ListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.ListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.ListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.ListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.supabase.v1.FileObjects.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional FileObjects data = 1;
 * @return {?proto.supabase.v1.FileObjects}
 */
proto.supabase.v1.ListResponse.prototype.getData = function() {
  return /** @type{?proto.supabase.v1.FileObjects} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.FileObjects, 1));
};


/**
 * @param {?proto.supabase.v1.FileObjects|undefined} value
 * @return {!proto.supabase.v1.ListResponse} returns this
*/
proto.supabase.v1.ListResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.supabase.v1.ListResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.ListResponse} returns this
 */
proto.supabase.v1.ListResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.ListResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.supabase.v1.Error}
 */
proto.supabase.v1.ListResponse.prototype.getError = function() {
  return /** @type{?proto.supabase.v1.Error} */ (
    jspb.Message.getWrapperField(this, Common_pb.Error, 2));
};


/**
 * @param {?proto.supabase.v1.Error|undefined} value
 * @return {!proto.supabase.v1.ListResponse} returns this
*/
proto.supabase.v1.ListResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.supabase.v1.ListResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.ListResponse} returns this
 */
proto.supabase.v1.ListResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.ListResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.supabase.v1.SearchOptions.toObject(includeInstance, f),
    parameters: (f = msg.getParameters()) && proto.supabase.v1.FetchParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.ListRequest}
 */
proto.supabase.v1.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.ListRequest;
  return proto.supabase.v1.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.ListRequest}
 */
proto.supabase.v1.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = new proto.supabase.v1.SearchOptions;
      reader.readMessage(value,proto.supabase.v1.SearchOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 4:
      var value = new proto.supabase.v1.FetchParameters;
      reader.readMessage(value,proto.supabase.v1.FetchParameters.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.supabase.v1.SearchOptions.serializeBinaryToWriter
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.supabase.v1.FetchParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.supabase.v1.ListRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.ListRequest} returns this
 */
proto.supabase.v1.ListRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SearchOptions options = 2;
 * @return {?proto.supabase.v1.SearchOptions}
 */
proto.supabase.v1.ListRequest.prototype.getOptions = function() {
  return /** @type{?proto.supabase.v1.SearchOptions} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.SearchOptions, 2));
};


/**
 * @param {?proto.supabase.v1.SearchOptions|undefined} value
 * @return {!proto.supabase.v1.ListRequest} returns this
*/
proto.supabase.v1.ListRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.ListRequest} returns this
 */
proto.supabase.v1.ListRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.ListRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FetchParameters parameters = 4;
 * @return {?proto.supabase.v1.FetchParameters}
 */
proto.supabase.v1.ListRequest.prototype.getParameters = function() {
  return /** @type{?proto.supabase.v1.FetchParameters} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.FetchParameters, 4));
};


/**
 * @param {?proto.supabase.v1.FetchParameters|undefined} value
 * @return {!proto.supabase.v1.ListRequest} returns this
*/
proto.supabase.v1.ListRequest.prototype.setParameters = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.ListRequest} returns this
 */
proto.supabase.v1.ListRequest.prototype.clearParameters = function() {
  return this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.ListRequest.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.SearchOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.SearchOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.SearchOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.SearchOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sortby: (f = msg.getSortby()) && proto.supabase.v1.SortBy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.SearchOptions}
 */
proto.supabase.v1.SearchOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.SearchOptions;
  return proto.supabase.v1.SearchOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.SearchOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.SearchOptions}
 */
proto.supabase.v1.SearchOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 3:
      var value = new proto.supabase.v1.SortBy;
      reader.readMessage(value,proto.supabase.v1.SortBy.deserializeBinaryFromReader);
      msg.setSortby(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.SearchOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.SearchOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.SearchOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.SearchOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSortby();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.supabase.v1.SortBy.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.supabase.v1.SearchOptions.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.supabase.v1.SearchOptions} returns this
 */
proto.supabase.v1.SearchOptions.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.supabase.v1.SearchOptions.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.supabase.v1.SearchOptions} returns this
 */
proto.supabase.v1.SearchOptions.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SortBy sortBy = 3;
 * @return {?proto.supabase.v1.SortBy}
 */
proto.supabase.v1.SearchOptions.prototype.getSortby = function() {
  return /** @type{?proto.supabase.v1.SortBy} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.SortBy, 3));
};


/**
 * @param {?proto.supabase.v1.SortBy|undefined} value
 * @return {!proto.supabase.v1.SearchOptions} returns this
*/
proto.supabase.v1.SearchOptions.prototype.setSortby = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.SearchOptions} returns this
 */
proto.supabase.v1.SearchOptions.prototype.clearSortby = function() {
  return this.setSortby(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.SearchOptions.prototype.hasSortby = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.SortBy.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.SortBy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.SortBy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.SortBy.toObject = function(includeInstance, msg) {
  var f, obj = {
    column: jspb.Message.getFieldWithDefault(msg, 1, ""),
    order: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.SortBy}
 */
proto.supabase.v1.SortBy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.SortBy;
  return proto.supabase.v1.SortBy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.SortBy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.SortBy}
 */
proto.supabase.v1.SortBy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.SortBy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.SortBy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.SortBy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.SortBy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string column = 1;
 * @return {string}
 */
proto.supabase.v1.SortBy.prototype.getColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.SortBy} returns this
 */
proto.supabase.v1.SortBy.prototype.setColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string order = 2;
 * @return {string}
 */
proto.supabase.v1.SortBy.prototype.getOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.supabase.v1.SortBy} returns this
 */
proto.supabase.v1.SortBy.prototype.setOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.FetchParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.FetchParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.FetchParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FetchParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    signal: (f = msg.getSignal()) && proto.supabase.v1.AbortSignal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.FetchParameters}
 */
proto.supabase.v1.FetchParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.FetchParameters;
  return proto.supabase.v1.FetchParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.FetchParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.FetchParameters}
 */
proto.supabase.v1.FetchParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.supabase.v1.AbortSignal;
      reader.readMessage(value,proto.supabase.v1.AbortSignal.deserializeBinaryFromReader);
      msg.setSignal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.FetchParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.FetchParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.FetchParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.FetchParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.supabase.v1.AbortSignal.serializeBinaryToWriter
    );
  }
};


/**
 * optional AbortSignal signal = 1;
 * @return {?proto.supabase.v1.AbortSignal}
 */
proto.supabase.v1.FetchParameters.prototype.getSignal = function() {
  return /** @type{?proto.supabase.v1.AbortSignal} */ (
    jspb.Message.getWrapperField(this, proto.supabase.v1.AbortSignal, 1));
};


/**
 * @param {?proto.supabase.v1.AbortSignal|undefined} value
 * @return {!proto.supabase.v1.FetchParameters} returns this
*/
proto.supabase.v1.FetchParameters.prototype.setSignal = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.supabase.v1.FetchParameters} returns this
 */
proto.supabase.v1.FetchParameters.prototype.clearSignal = function() {
  return this.setSignal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.supabase.v1.FetchParameters.prototype.hasSignal = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.supabase.v1.AbortSignal.prototype.toObject = function(opt_includeInstance) {
  return proto.supabase.v1.AbortSignal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.supabase.v1.AbortSignal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.AbortSignal.toObject = function(includeInstance, msg) {
  var f, obj = {
    aborted: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.supabase.v1.AbortSignal}
 */
proto.supabase.v1.AbortSignal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.supabase.v1.AbortSignal;
  return proto.supabase.v1.AbortSignal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.supabase.v1.AbortSignal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.supabase.v1.AbortSignal}
 */
proto.supabase.v1.AbortSignal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAborted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.supabase.v1.AbortSignal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.supabase.v1.AbortSignal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.supabase.v1.AbortSignal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.supabase.v1.AbortSignal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAborted();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool aborted = 1;
 * @return {boolean}
 */
proto.supabase.v1.AbortSignal.prototype.getAborted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.supabase.v1.AbortSignal} returns this
 */
proto.supabase.v1.AbortSignal.prototype.setAborted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.supabase.v1);
